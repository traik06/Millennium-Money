if (process.env.NODE_ENV !== 'production') {
    require('dotenv').config()
}

const express = require('express')
const app = express()
const router = express.Router();
const mongoose = require('mongoose')
const passport = require('passport')
const flash = require('express-flash')
const session = require('express-session')
const expressEjsLayout = require('express-ejs-layouts');
//const methodOverride = require('method-override')
//const bodyParser = require('body-parser')

//passport initialization
const initializePassport = require('./passportconfig')
initializePassport(passport, 
    email => user.fetch(user => user.email === email),
    id => user.fetch(user => user.id === id)
)


app.set('view-engine', 'ejs')
app.set('views', __dirname + '/views')

app.use(express.static('public'))
app.use(express.urlencoded({ extened: false}))
app.use(flash())
app.use(session({
    secret: process.env.SESSION_SECRET,
    resave: false,
    saveUninitialized: false
}))
//app.use(methodOverride('_method'))

app.use(bodyParser.urlencoded({ limit: '1mb', extended: false}))
app.use(passport.initialize())
app.use(passport.session())

//app.use('/', require('./routes/index'));
app.use('/', userRouter);

app.get('/', (req, res) => {
    res.render('login.ejs')
})

// app.get('/login', (req, res) => {
//     res.render('login.ejs')
// })

// app.get('/register', (req, res) => {
//     res.render('register.ejs')
// })

// app.post('/login', passport.authenticate('local', {
//     successRedirect: '/',
//     failureRedirect: '/login',
//     failureFlash: true
// }))

// app.post('/register', async (req, res) => {
//     try {
//         const hashedPassword = await bcrypt.hash(req.body.password, 10)
//         const user = new User({
//             username: req.body.username,
//             email: req.body.email,
//             password: hashedPassword

//         })
//         user.save()
        
//         res.redirect('/login')
//     } catch {
//         res.redirect('/register')
        

//     }
// })

// app.delete('/logout', (req, res) => {
//     req.logOut()
//     res.redirect('/login')
// })

// function checkAuthenticated(req, res, next) {
//     if (req.isAuthenticated()) {
//         return next()
//     }
//     res.redirect('/login')
// }
// function checkNotAuthenticated(req, res, next) {
//     if (req.isAuthenticated()) {
//        return res.redirect('/')
//     }
//     next()
// }


// connect mongoose to db
mongoose.connect(process.env.DATABASE_URL, { userNewURLParser: true })
const db = mongoose.connection
db.on('error', error => console.error(error))
db.once('open', () => console.error('Connected to Mongoose'))


// app port
app.listen(process.env.PORT || 3000)







<a href="/login" class="btn">Login</a>









// const initializePassport = require('./passportconfig')
// initializePassport(passport, 
//     email => user.fetch(user => user.email === email),
//     id => user.fetch(user => user.id === id)
// )


// router.post('/login', passport.authenticate('local', {
//     successRedirect: '/',
//     failureRedirect: '/login',
//     failureFlash: true
// }))